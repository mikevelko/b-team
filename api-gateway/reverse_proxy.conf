map $request_uri $login_path {
    default $request_uri;
    ~*^(?<prefix>.*)/(?<ui>client|hotel).*$ $prefix/$ui/login;
}

server {
    set $client_dev_url http://host.docker.internal:3006;
    set $hotel_dev_url http://host.docker.internal:3005;


    listen 80;
    #-------CLIENT DEV---------
    location ~* ^/dev/client/(login|.+\..+) {
        proxy_pass         $client_dev_url;
    }

    location /dev/client {
        auth_request /_auth_token_introspection;
        proxy_pass         $client_dev_url;
    }

    #-------HOTEL DEV---------
    location ~* ^/dev/client/(login|.+\..+) {
        proxy_pass         $hotel_dev_url;
    }

    location /dev/client {
        auth_request /_auth_token_introspection;
        proxy_pass         $hotel_dev_url;
    }

    #-------CLIENT STATIC---------
    location ~* ^/client/(login|.+\..+) {
        proxy_pass       http://client:80/$1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_cache_bypass $http_upgrade;
    }

    location /client {
        auth_request /_auth_token_introspection;
        proxy_pass         http://client:80/;
        proxy_redirect     off;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_cache_bypass $http_upgrade;
    }


    #-------HOTEL STATIC---------
    location ~* ^/hotel/(login|.+\..+) {
        proxy_pass       http://hotel:80/$1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_cache_bypass $http_upgrade;
    }

    location /hotel {
        auth_request /_auth_token_introspection;
        proxy_pass         http://hotel:80/;
        proxy_redirect     off;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_cache_bypass $http_upgrade;
    }


    #-------AUTH---------
    error_page 401 = @error401;

    location @error401 {
        return 302 http://$http_host$login_path;
    }


    location = /_auth_token_introspection {
        internal;
        proxy_method      POST;
        proxy_pass        http://auth-service:8080/api/v1/session;
    }


    #-------BE SERVICES---------
    location /api-hotel/offers {
        auth_request /_auth_token_introspection;
        proxy_pass         http://offer-service:8080/api/v1/hotel/offers/;
        proxy_redirect     off;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_cache_bypass $http_upgrade;
    }









}

