map $request_uri $login_path {
    default $request_uri;
    ~*^(?<prefix>.*)/(?<ui>client|hotel).*$ $prefix/$ui/login;
}

server {
    resolver 127.0.0.11 valid=30s;
    set $hotel_dev_url http://host.docker.internal:3005;

    listen 80;

    rewrite_log on;
    #-------DOCS---------
    location /swagger {
        return 301 http://$http_host/swagger/;
    }

    location /swagger/ {
        set $swagger_url http://swagger-ui:8080;
        rewrite ^/swagger(.*) $1 break;
        proxy_pass $swagger_url;
        proxy_redirect off;
        proxy_set_header Host $http_host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    }



    #-------CLIENT DEV---------
    location /dev/client {
        set $client_dev_url http://host.docker.internal:3006;
        proxy_pass         $client_dev_url;
    }


    # #-------CLIENT STATIC---------
    location /client/ {
        set $client_static_url http://client:80;
        rewrite ^/client(.*) $1 break;
        proxy_pass       $client_static_url;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_cache_bypass $http_upgrade;
    }

    location /client {
        return 301 http://$http_host/client/;
    }


    #-------HOTEL DEV---------
    location /dev/hotel {
        set $hotel_dev_url http://host.docker.internal:3005;
        proxy_pass         $hotel_dev_url;
    }


    # #-------HOTEL STATIC---------
    location /hotel/ {
        set $hotel_static_url http://hotel:80;
        rewrite ^/hotel(.*) $1 break;
        proxy_pass       $hotel_static_url;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_cache_bypass $http_upgrade;
    }

    # #-------AUTH---------
    error_page 401 = @error401;

    location @error401 {
        return 302 http://$http_host$login_path;
    }


    location /hotel {
        return 301 http://$http_host/hotel/;
    }

    # #-------AUTH---------
    error_page 401 = @error401;

    location @error401 {
        return 302 http://$http_host$login_path;
    }


    location = /_auth_token_introspection {
        set $auth_service_url http://auth-service:8080/api/v1/session/;
        internal;
        proxy_method      POST;
        proxy_pass        $auth_service_url;
        proxy_pass_request_body off;
        proxy_set_header        Content-Length "";
        proxy_set_header        X-Original-URI $request_uri;
    }


    # #-------BE SERVICES---------
    location /api-hotel/offers {
        set $offer_service_url http://offer-service:8080/api/v1/hotel/offers/;
        auth_request /_auth_token_introspection;
        proxy_pass         $offer_service_url;
        proxy_redirect     off;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_cache_bypass $http_upgrade;
    }


    location / {
        return 302 http://$http_host/client/;
    }


}

