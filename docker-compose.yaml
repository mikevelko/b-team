version: '3.7'
services:
  hotel:
    container_name: hotel
    build:
      context: hotel
      dockerfile: Dockerfile
      args:
        PUBLIC_URL: /hotel/
    environment:
      - CHOKIDAR_USEPOLLING=true
    ports:
    - 80:80
    networks:
      vpn:

  client:
    container_name: client
    build:
      context: client
      dockerfile: Dockerfile
      args:
        PUBLIC_URL: /client/
    environment:
      - CHOKIDAR_USEPOLLING=true
    ports:
      - 80:80
    networks:
      vpn:

  postgres:
    restart: always
    image: postgres:13.2-alpine
    ports:
      - 5432:5432
    healthcheck:
      test: [ "CMD", "pg_isready", "-q", "-d", "bookly", "-U", "bookly" ]
      timeout: 45s
      interval: 10s
      retries: 10
    environment:
      POSTGRES_USER: bookly
      POSTGRES_PASSWORD: bookly
      POSTGRES_DATABASE: bookly
    networks:
      vpn:

  init-postgres:
    build:
      context: postgres
      dockerfile: Dockerfile.psql
    volumes:
      - ./postgres/migration:/usr/local/bin
    environment:
      POSTGRES_USER: bookly
      PGPASSWORD: bookly
      POSTGRES_DATABASE: bookly
      POSTGRES_HOST: postgres
      POSTGRES_PORT: 5432
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      vpn:

  offer-service:
    container_name: offer-service
    build:
      context: server
      dockerfile: Dockerfile
      args:
        SERVICE_NAME: offer-service
    environment:
      POSTGRES_HOST: postgres
      POSTGRES_PORT: 5432
      POSTGRES_USER: bookly
      POSTGRES_PASSWORD: bookly
      POSTGRES_DATABASE: bookly
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - vpn

  api-gateway:
    image: nginx:stable-alpine
    container_name: api-gateway-nginx
    ports:
    - 8080:80
    volumes:
      - ./api-gateway/reverse_proxy.conf:/etc/nginx/conf.d/default.conf
    depends_on:
      - offer-service
    networks:
      vpn:

  auth-service:
    container_name: auth-service
    build:
      context: server
      dockerfile: Dockerfile
      args:
        SERVICE_NAME: auth-service
    environment:
      POSTGRES_HOST: postgres
      POSTGRES_PORT: 5432
      POSTGRES_USER: bookly
      POSTGRES_PASSWORD: bookly
      POSTGRES_DATABASE: bookly
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - vpn

networks:
  vpn:

