{
  "openapi": "3.0.1",
  "info": {
    "title": "Client API | Hotel API",
    "description": "A merged version hotel-endpoints.raml and client-endpoints.raml from specification. endpoints.raml were omitted, since its basically a copy of hotel-endpoints.raml. Please note that specification might not been converted 100% correctly to OAS 2.0 and there might be errors or misinterpretations. Do not hesitate to contact me if you think there is error in this documentation. Tokens for logging: {\"ID\": 99999998, \"CreatedAt\":\"2020-01-01\"}\n{\"ID\": 99999999, \"CreatedAt\":\"2020-01-01\"}",
    "version": "1.1 - 14.04.2021"
  },
  "servers": [
    {
      "url": "http://b.cebb8e0ee2ba4e9785f9.westeurope.aksapp.io/"
    },
    {
      "url": "http://localhost:8080/"
    }
  ],
  "paths": {
    "/api-hotel/offers": {
      "get": {
        "description": "List all offers related to hotel",
        "operationId": "GET_offers",
        "parameters": [
          {
            "name": "isActive",
            "in": "query",
            "description": "Optional parameter deciding what type of offers should be returned |",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "pageNumber",
            "in": "query",
            "description": "Number of page to show results",
            "schema": {
              "type": "integer",
              "default": 1
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "Number of show results",
            "schema": {
              "type": "integer",
              "default": 10
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "example": "[\n  {\n    \"isActive\": true,\n    \"offerTitle\": \"Great Offer\",\n    \"costPerChild\": 120.0,\n    \"costPerAdult\": 150.0,\n    \"maxGuests\": 4,\n    \"offerPreviewPicture\": \"kBKuB875JH5VJkhu\",\n  },\n  {\n    \"isActive\": false,\n    \"offerTitle\": \"Bad Offer\",\n    \"costPerChild\": 130.0,\n    \"costPerAdult\": 130.0,\n    \"maxGuests\": 2,\n    \"offerPreviewPicture\": \"kjdsf328KB53JVT9jk\",\n  }\n]\n",
                  "items": {
                    "$ref": "#/components/schemas/offerPreview"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "customTokenSecurityHotel": []
          }
        ]
      },
      "post": {
        "description": "Add new offer",
        "operationId": "POST_offers",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/offer"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Succesfully added. Return offerID",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "example": {
                    "offerID": 3
                  }
                }
              }
            }
          },
          "400": {
            "description": "Unable to add offer",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "example": {
                    "error": "Unable to add offer"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "customTokenSecurityHotel": []
          }
        ],
        "x-codegen-request-body-name": "body"
      }
    },
    "/api-hotel/offers/{offerID}": {
      "get": {
        "description": "Gets information related to a specific offer with ID equal to offerID",
        "operationId": "GET_offers-offerID",
        "parameters": [
          {
            "name": "offerID",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/offer"
                },
                "example": {
                  "isActive": false,
                  "offerTitle": "Rich Offer",
                  "costPerChild": 50,
                  "costPerAdult": 60,
                  "maxGuests": 5,
                  "description": "Offer description",
                  "offerPreviewPicture": "hbUbkjd86jhVG7JFjh",
                  "pictures": []
                }
              }
            }
          },
          "401": {
            "description": "Offer does not belong to this hotel",
            "content": {}
          },
          "404": {
            "description": "Offer not found",
            "content": {}
          }
        },
        "security": [
          {
            "customTokenSecurityHotel": []
          }
        ]
      },
      "delete": {
        "description": "Server marks the offer as deleted.",
        "operationId": "DELETE_offers-offerID",
        "parameters": [
          {
            "name": "offerID",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {}
          },
          "401": {
            "description": "Offer does not belong to this hotel",
            "content": {}
          },
          "404": {
            "description": "Offer not found",
            "content": {}
          },
          "409": {
            "description": "Unable to delete offer",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "example": {
                    "error": "There are still pending reservations for this offer"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "customTokenSecurityHotel": []
          }
        ]
      },
      "patch": {
        "description": "Server modifies offer",
        "operationId": "PATCH_offers-offerID",
        "parameters": [
          {
            "name": "offerID",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "required": [
                  "description",
                  "isActive",
                  "offerPictures",
                  "offerPreviewPicture",
                  "offerTitle"
                ],
                "type": "object",
                "properties": {
                  "isActive": {
                    "type": "boolean"
                  },
                  "offerTitle": {
                    "type": "string"
                  },
                  "description": {
                    "type": "string"
                  },
                  "offerPreviewPicture": {
                    "type": "string"
                  },
                  "offerPictures": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  }
                },
                "example": {
                  "isActive": true,
                  "offerTitle": "Not so great Offer",
                  "offerPreviewPicture": "hbUbkjd86jhVG7JFjh",
                  "description": "",
                  "offerPictures": []
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "",
            "content": {}
          },
          "400": {
            "description": "Unable to edit offer",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "example": {
                    "error": "Unable to edit offer"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Offer does not belong to this hotel",
            "content": {}
          },
          "404": {
            "description": "Not found",
            "content": {}
          }
        },
        "security": [
          {
            "customTokenSecurityHotel": []
          }
        ],
        "x-codegen-request-body-name": "body"
      }
    },
    "/api-hotel/offers/{offerID}/rooms": {
      "get": {
        "description": "Lists all rooms related to the hotel offer",
        "operationId": "GET_offers-offerID-rooms",
        "parameters": [
          {
            "name": "offerID",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "roomNumber",
            "in": "query",
            "description": "Optional filter on room number that is applied after the query has finished",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "pageNumber",
            "in": "query",
            "description": "Number of page to show results",
            "schema": {
              "type": "integer",
              "default": 1
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "Number of show results",
            "schema": {
              "type": "integer",
              "default": 10
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "example": [
                    {
                      "roomID": 5,
                      "hotelRoomNumber": "13A",
                      "offerID": [
                        1,
                        15
                      ]
                    },
                    {
                      "roomID": 7,
                      "hotelRoomNumber": "16",
                      "offerID": [
                        2,
                        4,
                        5
                      ]
                    }
                  ],
                  "items": {
                    "required": [
                      "hotelRoomNumber",
                      "offerID",
                      "roomID"
                    ],
                    "type": "object",
                    "properties": {
                      "roomID": {
                        "type": "integer"
                      },
                      "hotelRoomNumber": {
                        "type": "string"
                      },
                      "offerID": {
                        "type": "array",
                        "items": {
                          "type": "integer"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Offer does not belong to this hotel",
            "content": {}
          },
          "404": {
            "description": "Offer not found / Room with given roomNumber not found",
            "content": {}
          }
        },
        "security": [
          {
            "customTokenSecurityHotel": []
          }
        ]
      },
      "post": {
        "description": "Add a room associated with hotel offer",
        "operationId": "POST_offers-offerID-rooms",
        "parameters": [
          {
            "name": "offerID",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "description": "roomID",
          "content": {
            "application/json": {
              "schema": {
                "type": "integer",
                "example": 21
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "",
            "content": {}
          },
          "400": {
            "description": "Unable to add room",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "example": {
                    "error": "Unable to add room"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Offer or room with given ID does not belong to this hotel",
            "content": {}
          },
          "404": {
            "description": "Offer or room with given ID not found",
            "content": {}
          }
        },
        "security": [
          {
            "customTokenSecurityHotel": []
          }
        ],
        "x-codegen-request-body-name": "body"
      }
    },
    "/api-hotel/offers/{offerID}/rooms/{roomID}": {
      "delete": {
        "description": "Removes room from the offer",
        "operationId": "DELETE_offers-offerID-rooms-roomID",
        "parameters": [
          {
            "name": "roomID",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "offerID",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {}
          },
          "401": {
            "description": "Offer or room with given ID does not belong to this hotel",
            "content": {}
          },
          "404": {
            "description": "Offer or room not found",
            "content": {}
          }
        },
        "security": [
          {
            "customTokenSecurityHotel": []
          }
        ]
      }
    },
    "/api-hotel/rooms": {
      "get": {
        "description": "Lists all rooms",
        "operationId": "GET_rooms",
        "parameters": [
          {
            "name": "roomNumber",
            "in": "query",
            "description": "Optional filter on room number that is applied after the query has finished",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "pageNumber",
            "in": "query",
            "description": "Number of page to show results",
            "schema": {
              "type": "integer",
              "default": 1
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "Number of show results",
            "schema": {
              "type": "integer",
              "default": 10
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "example": [
                    {
                      "roomID": 5,
                      "hotelRoomNumber": "13A",
                      "offerID": [
                        1,
                        15,
                        28
                      ]
                    },
                    {
                      "roomID": 7,
                      "hotelRoomNumber": "16",
                      "offerID": [
                        3,
                        4,
                        7
                      ]
                    }
                  ],
                  "items": {
                    "required": [
                      "hotelRoomNumber",
                      "offerID",
                      "roomID"
                    ],
                    "type": "object",
                    "properties": {
                      "roomID": {
                        "type": "integer"
                      },
                      "hotelRoomNumber": {
                        "type": "string"
                      },
                      "offerID": {
                        "type": "array",
                        "items": {
                          "type": "integer"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Room with given roomNumber not found",
            "content": {}
          }
        },
        "security": [
          {
            "customTokenSecurityHotel": []
          }
        ]
      },
      "post": {
        "description": "Add a room not associated with any offer (HotelRoom table)",
        "operationId": "POST_rooms",
        "requestBody": {
          "description": "hotelRoomNumber",
          "content": {
            "application/json": {
              "schema": {
                "type": "string",
                "example": "12F"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Room added successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "integer",
                  "example": 14
                }
              }
            }
          },
          "400": {
            "description": "Unable to add room",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "example": {
                    "error": "Unable to add room"
                  }
                }
              }
            }
          },
          "409": {
            "description": "Room with given number already exists",
            "content": {}
          }
        },
        "security": [
          {
            "customTokenSecurityHotel": []
          }
        ],
        "x-codegen-request-body-name": "body"
      }
    },
    "/api-hotel/rooms/{roomID}": {
      "delete": {
        "description": "Deletes room with given ID. (entry in HotelRoom table is deleted)",
        "operationId": "DELETE_rooms-roomID",
        "parameters": [
          {
            "name": "roomID",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {}
          },
          "401": {
            "description": "Room does not belong to this hotel",
            "content": {}
          },
          "404": {
            "description": "Room not found",
            "content": {}
          },
          "409": {
            "description": "Unable to delete room",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "example": {
                    "error": "There are still pending reservations for this room that cannot be moved"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "customTokenSecurityHotel": []
          }
        ]
      }
    },
    "/api-hotel/reservations": {
      "get": {
        "security": [
          {
            "customTokenSecurityHotel": []
          }
        ],
        "description": "fetches current (and future) reservations made by clients and information regarding these clients",
        "operationId": "GET_reservations",
        "parameters": [
          {
            "name": "currentOnly",
            "in": "query",
            "description": "get reservations that are currently underway or all reservations (including ones that begin in the future)",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "roomID",
            "in": "query",
            "description": "get reservations connected with room with ID equal to roomID parameter",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "pageNumber",
            "in": "query",
            "description": "Number of page to show results",
            "schema": {
              "type": "integer",
              "default": 1
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "Number of show results",
            "schema": {
              "type": "integer",
              "default": 10
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns an array of objects containing reservation and client information related to a hotel room reservation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/reservationObject"
                  }
                }
              }
            }
          },
          "403": {
            "description": "Room with ID equal to roomID does not belong to the hotel",
            "content": {}
          },
          "404": {
            "description": "An error containing message describing the type of error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "example": {
                    "error": "Room with ID equal to roomID parameter does not exist"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api-hotel/hotelInfo": {
      "get": {
        "description": "Show info about hotel",
        "operationId": "GET_hotelInfo",
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "city",
                    "country",
                    "hotelDesc",
                    "hotelName",
                    "hotelPictures",
                    "hotelPreviewPicture"
                  ],
                  "type": "object",
                  "properties": {
                    "country": {
                      "type": "string"
                    },
                    "city": {
                      "type": "string"
                    },
                    "hotelName": {
                      "type": "string"
                    },
                    "hotelDesc": {
                      "type": "string"
                    },
                    "hotelPreviewPicture": {
                      "type": "string"
                    },
                    "hotelPictures": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    }
                  },
                  "example": {
                    "country": "Poland",
                    "city": "Warsaw",
                    "hotelName": "Novotel",
                    "hotelDesc": "Live Limitless",
                    "hotelPreviewPicture": "",
                    "hotelPictures": []
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "customTokenSecurityHotel": []
          }
        ]
      },
      "patch": {
        "description": "Update info about hotel",
        "operationId": "PATCH_hotelInfo",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "required": [
                  "hotelDesc",
                  "hotelName",
                  "hotelPictures",
                  "hotelPreviewPicture"
                ],
                "type": "object",
                "properties": {
                  "hotelName": {
                    "type": "string"
                  },
                  "hotelDesc": {
                    "type": "string"
                  },
                  "hotelPreviewPicture": {
                    "type": "string"
                  },
                  "hotelPictures": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  }
                },
                "example": {
                  "hotelName": "Novotel",
                  "hotelDesc": "Live Limitless",
                  "hotelPreviewPicture": "",
                  "hotelPictures": []
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "",
            "content": {}
          },
          "400": {
            "description": "Unable to add offer",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "example": {
                    "error": "Unable to add offer"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "customTokenSecurityHotel": []
          }
        ],
        "x-codegen-request-body-name": "body"
      }
    },
    "/api-client/client": {
      "get": {
        "description": "Get logged in client information.",
        "operationId": "GET_client",
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/clientInfo"
                },
                "example": {
                  "name": "Jan",
                  "surname": "Kowalski",
                  "username": "User123",
                  "email": "j.kowalski@example.mail.com"
                }
              }
            }
          },
          "401": {
            "description": "Login credentials not correct",
            "content": {}
          }
        },
        "security": [
          {
            "customTokenSecurityClient": []
          }
        ]
      },
      "patch": {
        "description": "Update currently logged in client's information.",
        "operationId": "PATCH_client",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/editClientInfo"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Profile was successfuly updated.",
            "content": {}
          },
          "400": {
            "description": "Profile couldn't be updated.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "example": {
                    "Invalid-email-format": {
                      "errorDescription": "Provided email has an invalid format"
                    },
                    "Invalid-username": {
                      "errorDescription": "Provided username contains invalid characters or does not differ from currently set username"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "customTokenSecurityClient": []
          }
        ],
        "x-codegen-request-body-name": "body"
      }
    },
    "/api-client/client/login": {
      "post": {
        "description": "Endpoint used to acquire client token used for further authentication and authorization. This endpoint is not protected by a security scheme.",
        "operationId": "POST_client-login",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/clientSecrets"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "A JWT token generated by the server",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/clientSessionToken"
                },
                "example": {
                  "id": 7,
                  "createdAt": "2020-10-02T15:00:00.000Z"
                }
              }
            }
          },
          "401": {
            "description": "User with provided login (email) does not exists or provided password is incorrect",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/authenticationError"
                },
                "example": {
                  "desc": "Provided credentials are incorrect"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "body"
      }
    },
    "/api-client/client/reservations": {
      "get": {
        "description": "Get list of all reservations made by the client",
        "operationId": "GET_client-reservations",
        "parameters": [
          {
            "name": "pageNumber",
            "in": "query",
            "description": "Number of page to show results",
            "schema": {
              "type": "integer",
              "default": 1
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "Number of show results",
            "schema": {
              "type": "integer",
              "default": 10
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of reservation information and offerID relating to the reservation and preview information related to the hotel",
            "content": {}
          }
        },
        "security": [
          {
            "customTokenSecurityClient": []
          }
        ]
      }
    },
    "/api-client/client/reservations/{reservationID}": {
      "delete": {
        "description": "Cancel exisiting reservation provided that it hasn't started",
        "operationId": "DELETE_client-reservations-reservationID",
        "parameters": [
          {
            "name": "reservationID",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {}
          },
          "400": {
            "description": "Reservations cannot be deleted unless they haven't begun",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "example": {
                    "error": "Reservation is currently underway or already completed"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Cannot delete reservation becuase of no ownership of a reservation with ID equal to reservationID path parameter",
            "content": {}
          },
          "404": {
            "description": "Reservation with ID equal to reservationID path parameter doesn't exist",
            "content": {}
          }
        },
        "security": [
          {
            "customTokenSecurityClient": []
          }
        ]
      }
    },
    "/api-client/client/reservations/{reservationID}/review": {
      "get": {
        "security": [
          {
            "customTokenSecurityClient": []
          }
        ],
        "description": "Pobiera opinię do danej rezerwacji",
        "operationId": "GET_client-reservations-reservationID-review",
        "parameters": [
          {
            "name": "reservationID",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {}
          },
          "404": {
            "description": "Reservation not found",
            "content": {}
          }
        }
      },
      "put": {
        "security": [
          {
            "customTokenSecurityClient": []
          }
        ],
        "description": "Creates/edits a new review related to an offer",
        "operationId": "PUT_client-reservations-reservationID-review",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "required": [
                  "content",
                  "rating"
                ],
                "type": "object",
                "properties": {
                  "content": {
                    "type": "string"
                  },
                  "rating": {
                    "type": "integer"
                  }
                },
                "example": {
                  "content": "fine",
                  "rating": 5
                }
              }
            }
          },
          "required": true
        },
        "parameters": [
          {
            "name": "reservationID",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "",
            "content": {}
          }
        },
        "x-codegen-request-body-name": "body"
      },
      "delete": {
        "security": [
          {
            "customTokenSecurityClient": []
          }
        ],
        "description": "Deletes a client review related to an offer",
        "operationId": "DELETE_client-reservations-reservationID-review",
        "parameters": [
          {
            "name": "reservationID",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {}
          },
          "404": {
            "description": "",
            "content": {}
          }
        }
      }
    },
    "/api-client/hotels": {
      "get": {
        "description": "Returns list of hotels according to filter values",
        "operationId": "GET_hotels",
        "parameters": [
          {
            "name": "country",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "city",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "hotelName",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Array of objects containing preview information related to hotels",
            "content": {}
          }
        },
        "security": [
          {
            "customTokenSecurityClient": []
          }
        ]
      }
    },
    "/api-client/hotels/{hotelID}": {
      "get": {
        "description": "Gets detailed information about a hotel",
        "operationId": "GET_hotels-hotelID",
        "parameters": [
          {
            "name": "hotelID",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {}
          },
          "404": {
            "description": "Hotel with ID equal to hotelID parameter does not exist",
            "content": {}
          }
        },
        "security": [
          {
            "customTokenSecurityClient": []
          }
        ]
      }
    },
    "/api-client/hotels/{hotelID}/offers": {
      "get": {
        "description": "Returns list of offers according to filter values",
        "operationId": "GET_hotels-hotelID-offers",
        "parameters": [
          {
            "name": "hotelID",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "pageNumber",
            "in": "query",
            "description": "Number of page to show results",
            "schema": {
              "type": "integer",
              "default": 1
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "Number of show results",
            "schema": {
              "type": "integer",
              "default": 10
            }
          },
          {
            "name": "fromTime",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "toTime",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "minGuests",
            "in": "query",
            "schema": {
              "minimum": 1,
              "type": "integer"
            }
          },
          {
            "name": "costMax",
            "in": "query",
            "schema": {
              "minimum": 0,
              "type": "integer"
            }
          },
          {
            "name": "costMin",
            "in": "query",
            "schema": {
              "minimum": 0,
              "type": "integer"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "",
            "content": {}
          }
        },
        "security": [
          {
            "customTokenSecurityClient": []
          }
        ]
      }
    },
    "/api-client/hotels/{hotelID}/offers/{offerID}": {
      "get": {
        "description": "Returns detailed information about an offer",
        "operationId": "GET_hotels-hotelID-offers-offerID",
        "parameters": [
          {
            "name": "offerID",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "hotelID",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "",
            "content": {}
          }
        },
        "security": [
          {
            "customTokenSecurityClient": []
          }
        ]
      }
    },
    "/api-client/hotels/{hotelID}/offers/{offerID}/reservations": {
      "post": {
        "description": "Create new reservation",
        "operationId": "POST_hotels-hotelID-offers-offerID-reservations",
        "parameters": [
          {
            "name": "hotelID",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "offerID",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "required": [
                  "from",
                  "numberOfAdults",
                  "numberOfChildren",
                  "to"
                ],
                "type": "object",
                "properties": {
                  "from": {
                    "type": "string",
                    "format": "date"
                  },
                  "to": {
                    "type": "string",
                    "format": "date"
                  },
                  "numberOfChildren": {
                    "type": "integer"
                  },
                  "numberOfAdults": {
                    "type": "integer"
                  }
                },
                "example": {
                  "from": "2021-10-02T15:00:00.000Z",
                  "to": "2021-12-02T15:00:00.000Z",
                  "numberOfChildren": 1,
                  "numberOfAdults": 2
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "",
            "content": {}
          },
          "400": {
            "description": "Cannot create a reservation if the offer is inactive or deleted or is unavailable during chosen time interval",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "example": {
                    "error": "Offer is not available - please refresh information related to the offer availability"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {}
          }
        },
        "security": [
          {
            "customTokenSecurityClient": []
          }
        ],
        "x-codegen-request-body-name": "body"
      }
    },
    "/api-client/hotels/{hotelID}/offers/{offerID}/reviews": {
      "get": {
        "security": [
          {
            "customTokenSecurityClient": []
          }
        ],
        "description": "Returns all reviews related to an offer",
        "operationId": "GET_hotels-hotelID-offers-offerID-reviews",
        "parameters": [
          {
            "name": "hotelID",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "offerID",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "An arry of objects containing information related to offer reviews",
            "content": {}
          },
          "404": {
            "description": "Resource not found",
            "content": {}
          }
        }
      }
    },
    "/api-client/hotels/{hotelID}/reviews": {
      "get": {
        "security": [
          {
            "customTokenSecurityClient": []
          }
        ],
        "description": "Returns all reviews related to a hotel",
        "operationId": "GET_hotels-hotelID-reviews",
        "parameters": [
          {
            "name": "hotelID",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "An arry of objects containing information related to offer reviews",
            "content": {}
          },
          "404": {
            "description": "Hotel not found",
            "content": {}
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "authenticationError": {
        "required": [
          "desc"
        ],
        "type": "object",
        "properties": {
          "desc": {
            "type": "string",
            "description": "A description of the type of the authentication error."
          }
        }
      },
      "offerPreview": {
        "required": [
          "costPerAdult",
          "costPerChild",
          "isActive",
          "maxGuests",
          "offerPreviewPicture",
          "offerTitle"
        ],
        "type": "object",
        "properties": {
          "ID": {
            "type": "integer"
          },
          "isActive": {
            "type": "boolean"
          },
          "offerTitle": {
            "type": "string"
          },
          "costPerChild": {
            "multipleOf": 0.01,
            "type": "number"
          },
          "costPerAdult": {
            "multipleOf": 0.01,
            "type": "number"
          },
          "maxGuests": {
            "minimum": 1,
            "type": "integer"
          },
          "offerPreviewPicture": {
            "type": "string"
          }
        }
      },
      "offer": {
        "required": [
          "costPerAdult",
          "costPerChild",
          "description",
          "isActive",
          "maxGuests",
          "offerPreviewPicture",
          "offerTitle",
          "pictures"
        ],
        "type": "object",
        "properties": {
          "isActive": {
            "type": "boolean"
          },
          "offerTitle": {
            "type": "string"
          },
          "costPerChild": {
            "multipleOf": 0.01,
            "type": "number"
          },
          "costPerAdult": {
            "multipleOf": 0.01,
            "type": "number"
          },
          "maxGuests": {
            "minimum": 1,
            "type": "integer"
          },
          "description": {
            "type": "string"
          },
          "offerPreviewPicture": {
            "type": "string"
          },
          "pictures": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "rooms": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "reservationObject": {
        "required": [
          "client",
          "reservation",
          "room"
        ],
        "type": "object",
        "properties": {
          "reservation": {
            "required": [
              "adultsCount",
              "childrenCount",
              "fromTime",
              "offerID",
              "reservationID",
              "toTime"
            ],
            "type": "object",
            "properties": {
              "reservationID": {
                "type": "integer"
              },
              "offerID": {
                "type": "integer"
              },
              "fromTime": {
                "type": "string",
                "format": "date-time"
              },
              "toTime": {
                "type": "string",
                "format": "date-time"
              },
              "childrenCount": {
                "type": "integer"
              },
              "adultsCount": {
                "type": "integer"
              }
            }
          },
          "client": {
            "required": [
              "clientID",
              "name",
              "surname"
            ],
            "type": "object",
            "properties": {
              "clientID": {
                "type": "integer"
              },
              "name": {
                "type": "string"
              },
              "surname": {
                "type": "string"
              }
            }
          },
          "room": {
            "required": [
              "hotelRoomNumber",
              "roomID"
            ],
            "type": "object",
            "properties": {
              "roomID": {
                "type": "integer"
              },
              "hotelRoomNumber": {
                "type": "string"
              }
            }
          }
        }
      },
      "clientSessionToken": {
        "required": [
          "createdAt",
          "id"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "An unique client ID used in accessing server resources."
          },
          "createdAt": {
            "type": "string",
            "description": "Date of token creation",
            "format": "date-time"
          }
        }
      },
      "clientSecrets": {
        "required": [
          "login",
          "password"
        ],
        "type": "object",
        "properties": {
          "login": {
            "type": "string",
            "description": "Current user email is used as a login"
          },
          "password": {
            "type": "string"
          }
        },
        "description": "An object containing client secrets (login, password) necessary for initial authentication and distribution of a token."
      },
      "clientInfo": {
        "required": [
          "email",
          "name",
          "surname",
          "username"
        ],
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "surname": {
            "type": "string"
          },
          "username": {
            "type": "string"
          },
          "email": {
            "type": "string"
          }
        },
        "description": "Data describing client's account"
      },
      "editClientInfo": {
        "type": "object",
        "properties": {
          "username": {
            "type": "string"
          },
          "email": {
            "type": "string"
          }
        },
        "description": "Data describing client's account"
      }
    },
    "parameters": {
      "pageNumber": {
        "name": "pageNumber",
        "in": "query",
        "description": "Number of page to show results",
        "schema": {
          "type": "integer",
          "default": 1
        }
      },
      "pageSize": {
        "name": "pageSize",
        "in": "query",
        "description": "Number of show results",
        "schema": {
          "type": "integer",
          "default": 10
        }
      }
    },
    "securitySchemes": {
      "customTokenSecurityHotel": {
        "type": "apiKey",
        "description": "Custom security token given by the server administrator.",
        "name": "x-hotel-token",
        "in": "header"
      },
      "customTokenSecurityClient": {
        "type": "apiKey",
        "description": "Custom security token generated by the server. Distributed to clients upon successful login and used for requests requiring client authentication.",
        "name": "x-session-token",
        "in": "header"
      }
    }
  }
}