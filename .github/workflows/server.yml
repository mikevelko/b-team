name: server

on:
  push:
    branches: [ main ]
    paths:
      - 'server/**'
      - 'api-tests/**'
  pull_request:
    branches: [ main ]
    paths:
      - 'server/**'
      - 'api-tests/**'

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2

    - name: Set up Go
      uses: actions/setup-go@v2
      with:
        go-version: 1.16.2

    - name: golangci-lint
      uses: golangci/golangci-lint-action@v2.4.1
      with:
        version: v1.38.0
        working-directory: server
        skip-go-installation: true
        skip-pkg-cache: true

    - name: setup-db
      run: docker-compose up -d postgres init-postgres

    - name: UnitTest
      run: go test -v -covermode=count -coverprofile=coverage.out ./...
      working-directory: ./server

    - name: PrepareIntegrationTests
      run: docker-compose up -d init-postgres auth-service hotel-service offer-service room-service user-service api-gateway

    - name: RunIntegrationTest
      uses: matt-ball/newman-action@master
      with:
        collection: api-tests/api-tests.postman_collection.json

  #    - name: gcov2lcov-action
  #      uses: jandelgado/gcov2lcov-action@v1.0.8
  #      with:
  #        infile: server/coverage.out
  #        outfile: server/coverage.lcov
  #        version: v1.0.8
  #
  #    - name: coverage-report
  #      uses: romeovs/lcov-reporter-action@v0.2.16
  #      with:
  #        github-token: ${{ secrets.GITHUB_TOKEN }}
  #        lcov-file: ./server/coverage.lcov


  build:
    runs-on: ubuntu-latest
    needs: [test]
    steps:
      - uses: actions/checkout@v2
      - name: Set up Go
        uses: actions/setup-go@v2
        with:
          go-version: 1.16.2
      - name: Build
        run: go build -v ./...
        working-directory: ./server




